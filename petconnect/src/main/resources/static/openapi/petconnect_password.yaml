openapi: 3.0.3
info:
  title: API de Gerenciamento de Senhas
  description: API para atualização e redefinição de senhas de usuários.
  version: 1.0.3
  contact:
    name: 'Suporte PetConnect'
    url: 'https://github.com/projeto-final-petshop'
    email: 'petshop.petconnect@gmail.com'
  license:
    name: 'Apache 2.0'
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: "http://localhost:8888/api/v1"
    description: "Servidor local"
  - url: "http://localhost:8888/petconnect"
    description: "Produção"
tags:
  - name: Password
    description: 'Gerenciamento de senhas'
paths:
  /api/v1/users/update-password:
    put:
      summary: 'Atualizar Senha do Usuário'
      description: 'Atualiza a senha atual do usuário autenticado.'
      tags:
        - Password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
            examples:
              example1:
                summary: Exemplo de requisição para atualizar senha
                value:
                  currentPassword: "senhaAtual123"
                  newPassword: "NovaSenha123!"
                  confirmPassword: "NovaSenha123!"
      responses:
        '200':
          description: 'Senha atualizada com sucesso.'
        '401':
          description: 'Não autorizado.'
        '500':
          description: 'Erro no servidor ao tentar processar a requisição.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
              examples:
                errorResponse:
                  value:
                    timestamp: "2024-06-21 08:30:47"
                    status: 500
                    error: "Internal Server Error"
                    message: "Erro no servidor ao tentar processar a requisição."

  /api/v1/auth/reset-password:
    post:
      summary: Redefinir Senha por E-mail
      description: Envia um e-mail com link para redefinição de senha baseado no e-mail fornecido.
      tags:
        - Password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
            examples:
              example1:
                summary: Exemplo de requisição para redefinir senha
                value:
                  email: "usuario@example.com"
      responses:
        '200':
          description: 'E-mail de redefinição de senha enviado com sucesso.'
        '400':
          description: 'Requisição inválida.'
        '500':
          description: 'Erro no servidor ao tentar processar a requisição.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
              examples:
                errorResponse:
                  value:
                    timestamp: "2024-06-21 08:30:47"
                    status: 500
                    error: "Internal Server Error"
                    message: "Erro no servidor ao tentar processar a requisição."

  /api/v1/reset-password/confirm:
    post:
      summary: Confirmar Redefinição de Senha
      description: Confirma a redefinição de senha com o token fornecido.
      tags:
        - Password
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
          example: "c4f74b9d-122f-4ed6-a267-6d6a081f7d73"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
            examples:
              example1:
                summary: Exemplo de requisição para confirmar redefinição de senha
                value:
                  newPassword: "NovaSenha123!"
                  confirmPassword: "NovaSenha123!"
      responses:
        '200':
          description: 'Reset de senha realizado com sucesso.'
        '400':
          description: 'As senhas não conferem.'
        '401':
          description: 'Não autorizado.'
        '404':
          description: 'Token inválido ou expirado.'
        '500':
          description: 'Erro no servidor ao tentar processar a requisição.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
              examples:
                errorResponse:
                  value:
                    timestamp: "2024-06-21 08:30:47"
                    status: 500
                    error: "Internal Server Error"
                    message: "Erro no servidor ao tentar processar a requisição."
components:
  schemas:
    UpdatePasswordRequest:
      type: object
      properties:
        currentPassword:
          type: string
          format: password
          description: 'Senha atual do usuário.'
          example: "senhaAtual123"
        newPassword:
          type: string
          format: password
          description: 'Nova senha que o usuário deseja definir.'
          example: "NovaSenha123!"
        confirmPassword:
          type: string
          format: password
          description: 'Confirmação da nova senha.'
          example: "NovaSenha123!"
      required:
        - currentPassword
        - newPassword
        - confirmPassword
    PasswordResetRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: 'Endereço de e-mail para envio do link de redefinição de senha.'
          example: "petshop.petconnect@gmail.com"
      required:
        - email
    ResetPasswordRequest:
      type: object
      properties:
        newPassword:
          type: string
          format: password
          description: 'Nova senha que o usuário deseja definir.'
          example: "NovaSenha123!"
        confirmPassword:
          type: string
          format: password
          description: 'Confirmação da nova senha.'
          example: "NovaSenha123!"
      required:
        - newPassword
        - confirmPassword
    ExceptionResponse:
      type: object
      description: 'Resposta de erro contendo detalhes sobre a exceção.'
      properties:
        timestamp:
          type: string
          description: 'Data e hora do erro no formato yyyy-MM-dd HH:mm:ss.'
          example: "yyyy-MM-dd HH:mm:ss"
        status:
          type: integer
          description: 'Código de status HTTP.'
          example: 400
        error:
          type: string
          description: 'Tipo de erro.'
          example: "Bad Request"
        message:
          type: string
          description: 'Mensagem detalhada sobre o erro.'
          example: "Requisição inválida."
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
