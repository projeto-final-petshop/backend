openapi: 3.0.3
info:
  title: "Authentication API"
  description: "API para autenticação de usuários com JWT e CSRF."
  version: 1.0.3
  contact:
    name: 'Suporte PetConnect'
    url: 'https://github.com/projeto-final-petshop'
    email: 'petshop.petconnect@gmail.com'
  license:
    name: 'Apache 2.0'
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: "http://localhost:8888/api/v1"
    description: "Servidor local"
  - url: "http://localhost:8888/petconnect"
    description: "Produção"
tags:
  - name: Auth
    description: 'Autenticação'
paths:
  /auth/signup:
    post:
      summary: 'Registro de novo usuário'
      tags:
        - Auth
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: "Usuário registrado com sucesso"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: 'Requisição inválida'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
              examples:
                badRequest:
                  value:
                    timestamp: "2024-06-21 08:30:47"
                    status: 400
                    error: "Bad Request"
                    message: "Dados inválidos"
        '500':
          description: 'Erro no servidor ao tentar processar a requisição.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
              examples:
                errorResponse:
                  value:
                    timestamp: "2024-06-21 08:30:47"
                    status: 500
                    error: "Internal Server Error"
                    message: "Erro no servidor ao tentar processar a requisição."
  /auth/login:
    post:
      summary: "Realiza login do usuário"
      tags:
        - Auth
      operationId: authenticate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: "Login realizado com sucesso"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: 'Requisição inválida'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
              examples:
                badRequest:
                  value:
                    timestamp: "2024-06-21 08:30:47"
                    status: 400
                    error: "Bad Request"
                    message: "Email ou senha inválidos"
        '401':
          description: 'Não autorizado'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
              examples:
                unauthorized:
                  value:
                    timestamp: "2024-06-21 08:30:47"
                    status: 401
                    error: "Unauthorized"
                    message: "Credenciais não autorizadas"
        '500':
          description: 'Erro no servidor ao tentar processar a requisição.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExceptionResponse'
              examples:
                errorResponse:
                  value:
                    timestamp: "2024-06-21 08:30:47"
                    status: 500
                    error: "Internal Server Error"
                    message: "Erro no servidor ao tentar processar a requisição."
components:
  schemas:
    LoginRequest:
      type: object
      description: "Dados para login do usuário"
      properties:
        email:
          type: string
          format: email
          example: "petshop.petconnect@gmail.com"
        password:
          type: string
          format: password
          example: "senh@123"
      required:
        - email
        - password
    LoginResponse:
      type: object
      description: "Resposta contendo o token JWT e informações do usuário"
      properties:
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiJ9..."
        tokenType:
          type: string
          example: "Bearer"
        expiresAt:
          type: integer
          format: int64
          example: 1719077479000
        username:
          type: string
          example: "petshop.petconnect@gmail.com"
        email:
          type: string
          format: email
          example: "petshop.petconnect@gmail.com"
        roles:
          type: array
          items:
            type: string
            example: "ROLE_USER"
    UserRequest:
      type: object
      description: "Dados para cadastro de um novo usuário"
      properties:
        name:
          type: string
          example: "João da Silva"
        email:
          type: string
          format: email
          example: "petshop.petconnect@gmail.com"
        password:
          type: string
          format: password
          example: "senh@123"
        cpf:
          type: string
          example: "396.810.991-09"
        phoneNumber:
          type: string
          example: "+5521986548329"
      required:
        - name
        - email
        - password
        - cpf
        - phoneNumber
    UserResponse:
      type: object
      description: "Resposta contendo informações do usuário registrado"
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "João da Silva"
        email:
          type: string
          format: email
          example: "petshop.petconnect@gmail.com"
        cpf:
          type: string
          example: "396.810.991-09"
        phoneNumber:
          type: string
          example: "+5521986548329"
        active:
          type: boolean
          example: true
        role:
          $ref: '#/components/schemas/RoleResponse'
        createdAt:
          type: string
          format: date-time
          example: "2024-06-05 13:40:05"
        updatedAt:
          type: string
          format: date-time
          example: "2024-06-05 13:40:05"
        enabled:
          type: boolean
          example: true
        accountNonLocked:
          type: boolean
          example: true
        username:
          type: string
          example: "petshop.petconnect@gmail.com"
        authorities:
          type: array
          items:
            type: object
            properties:
              authority:
                type: string
                example: "ROLE_USER"
        credentialsNonExpired:
          type: boolean
          example: true
        accountNonExpired:
          type: boolean
          example: true
    RoleResponse:
      type: object
      description: "Informações do papel (role) do usuário"
      properties:
        roleId:
          type: integer
          example: 1
        name:
          $ref: '#/components/schemas/RoleEnum'
        description:
          type: string
          example: "Dono do animal de estimação (Pet)"
        createdAt:
          type: string
          format: date-time
          example: "2023-06-18 12:00:00"
        updatedAt:
          type: string
          format: date-time
          example: "2024-06-18 12:00:00"
    RoleEnum:
      type: string
      description: "Enumeração dos papéis disponíveis para usuários"
      enum:
        - USER
        - ADMIN
        - GROOMING
        - VETERINARIAN
        - EMPLOYEE
      example: USER
    ExceptionResponse:
      type: object
      description: "Resposta de erro padrão"
      properties:
        timestamp:
          type: string
          format: date-time
          example: "2024-06-21 08:30:47"
        status:
          type: integer
          example: 400
        error:
          type: string
          example: "Bad Request"
        message:
          type: string
          example: "Email ou senha inválidos"