openapi: 3.0.3
info:
  title: API REST Pets
  description: API REST Pets
  version: 1.0.0
servers:
  - url: 'http://localhost:8888/api/petconnet'
tags:
  - name: pet
    description: 'Tudo sobre seu Pet'
paths:
  /pets/register:
    post:
      tags:
        - pet
      summary: Cadastrar Pet
      description: Adicionar novo animal de estimação
      operationId: registerPet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetRequest'
      responses:
        '201':
          description: 'Pet cadastrado com sucesso'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetResponse'
components:
  schemas:
    PetRequest:
      description: 'Formulário de cadastro e atualização do Pet'
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: 'Bob'
          description: |-
            Nome do animal de estimação. O campo é obrigatório. Não pode estar vazio, em branco ou nulo.
        age:
          type: integer
          format: int32
          example: 2
          minimum: 0
          description: |-
            Deve ser um número positivo igual ou maior que zero. (opcional)
        color:
          type: string
          example: 'Branco'
          description: |-
            Deve ser a cor do animal. Pode ser uma ou mais cores. (opcional)
        breed:
          type: string
          example: 'Malteses (opcional)'
          description: |-
            Raça do animal.
        animalType:
          type: string
          example: 'Dog'
          description: |-
            Tipo de animal: dog, cat ou other. (opcional)
        birthdate:
          type: string
          format: date-time
          description: 'Data de nascimento do animal (opcional)'
        userId:
          type: integer
          format: int64
          example: 2
          description: 'ID do usuário (tutor) do animal.'
    PetResponse:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: 'Bob'
        age:
          type: integer
          format: int32
          example: 2
        color:
          type: string
          example: 'Branco'
        breed:
          type: string
          example: 'Malteses'
        animalType:
          type: string
          example: 'Dog'
        userId:
          type: integer
          format: int64
          example: 2

  
